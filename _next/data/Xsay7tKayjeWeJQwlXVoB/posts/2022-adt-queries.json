{"pageProps":{"post":{"title":"ADT queries!","date":"2022-06-09T00:00:00.000Z","slug":"2022-adt-queries","author":"zaklaus","content":"<p>Hi there!</p>\n<p>With the release of <a href=\"https://github.com/zpl-c/zpl/releases/tag/16.1.1\">16.1.1</a> version of zpl you are now able to perform URI like queries on ADT nodes.</p>\n<h2>New functionality</h2>\n<p>The new function <code>zpl_adt_get</code> takes a URI which specifies how we should perform a lookup on an ADT node. The following features are present:</p>\n<ul>\n<li>nested lookup\n<ul>\n<li><code>\"a/b/c\"</code> would look through nodes to fetch the <code>c</code> node.</li>\n</ul>\n</li>\n<li>nested conditional lookup\n<ul>\n<li><code>\"arr/[foo=123]/bar\"</code> would scan the <code>arr</code> array node to find an object element which field <code>foo</code> would be of value <code>123</code>, it would then fetch a node inside called <code>bar</code>.</li>\n</ul>\n</li>\n<li>index-based lookup\n<ul>\n<li><code>\"arr/3\"</code> would fetch the 4th element of array node <code>arr</code>.</li>\n</ul>\n</li>\n<li>value-based lookup\n<ul>\n<li><code>\"arr/[apple]\"</code> would fetch an element of array node <code>arr</code> with value <code>apple</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Example call:</p>\n<pre><code class=\"language-c\">{\n  zpl_json_object *node = zpl_adt_get(document, \"foo/bar/baz\");\n  // node variable is now a pointer to the node called `baz` or null pointer if lookup has failed.\n}\n</code></pre>\n<p>As we can see, this new function reduces the amount of code needed to perform lookups on ADT nodes. It is also much more readable and easy to understand.</p>\n<p>Feel free to check out the <a href=\"https://github.com/zpl-c/zpl/blob/master/code/apps/examples/json_get.c\">json_get.c</a> example code.</p>\n<p>We also plan to implement a sscanf alike addition to this API later on, example:</p>\n<pre><code class=\"language-c\">{\n  zpl_adt_get(obj, \"/settings/title:%s/x:%d/y:%d/modes/[name=enhanced]:%n\", title_str, &#x26;x, &#x26;y, node_ptr);\n}\n</code></pre>\n<h2>Parser improvements</h2>\n<p>The new version also offers an ability to disable extra parsing logic to reduce memory footprint and improve parsing speed,\nthe macro switch responsible for this change is <code>ZPL_PARSER_DISABLE_ANALYSIS</code>. Note it strips certain features that would ensure data format consistency on exports, use only when you want to perform fast raw imports!</p>\n<p>See you next time!</p>\n"}},"__N_SSG":true}